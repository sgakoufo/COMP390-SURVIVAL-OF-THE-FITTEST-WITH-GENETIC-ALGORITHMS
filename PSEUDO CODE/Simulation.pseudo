class Simulation// Missing "{" to allow comments to show
    // MUTATIONS TO BE IMPLEMENTED
    //=====================================================
    // Initialise Variables
    //=====================================================
    private int generationNum;
    private Final int numOfCreatures = 100; // THIS IS A PLACEHOLDER
    
    private creature[] creatureArray = new Creature[numOfCreatures];// create an array of type creature and length creatureNum
    private Creature bestCreature;
    private Creature secnondBestCreature;


    //=====================================================
    // Constructors
    //=====================================================

    //=====================================================
    // MAIN METHOD
    //=====================================================
    public  Main(){
        generationNum = 1;
        runSimulation();
        }


    private void runSimulation(){
        // this fucntion starts running the simulation
        // TO BE IMPLEMENTED
        if (generationNum == 1){// for the first generation, pass no paramaters, and craetre craetures with random varaibales
            for (int i = 0; i < numOfCreatures; i++){
                creatureArray[i] = creature();
                runGeneration();
                bestCreature = findBestCreature();
                secondBestCreature = findSecBestCreature();
            }
        }
        // now start running for every other generation until a creature reaches the end
        while(!reachedEnd){
            generationNum++;
            for(int i = 0; i < numOfCreatures; i++){
                creatureArray[i] = Creature(bestCreature, secBestCreature);// call the cnstructor function with the best creature so that the creature generates creatures accoridngly
                runGeneration();
                bestCreature = findBestCreature();
                secBestCreate = findSecBestCreature();
            }
            for// ALSO ADD IN MUTAIOTNS. MAKE THE ABOVE FOR LOOP HAPPEB FOR ONLY THE  80% OF CREATURES AND THIS FOR THE REST 20%
        }

        endSimulation();
        // note we can also adjust this and end the simualtiona after a certain time has been achieved, certain number of generations, certain number of creatures reached etc/
    }
    public void runGeneration(){
        // TO BE IMPMENTED
        // This funcion runs the acual generaitn, calcualtes data, calcualtes the apropriate time to end the generation etc. Maybe a good idea to add this as a different class?
        
    }

    //=====================================================
    // Support functions
    //=====================================================
    public creature findBestCreature(Creature creatureArray){
        // this function finds the best crature out of the creature array that is passed on to it as a paramater
        // TO BE IMPLEMENTED
    }
    public creature findSecBestCreature(Creature creatureArray){
        // this function finds the second best crature out of the creature array that is passed on to it as a paramater
        // TO BE IMPLEMENTED
    }
    
    public boolean reachedEnd(){
        // this function returns true or false based on if a creature has reached the end
        // TO BE IMPLEMNETED
    }
    public void endSimulation(){
        //TO BE IMPLEMENTED. IMPLEMENT SO FUNCTION STOPS EVERYTHING, CALCULATES DATA. 
    }




}