class Creature{
    
    //   MUTATIONS TO BE IMPLEMENTED
    // this is pseudocode for the class that will be used for the craeture
``
`
    //=====================================================
    // initialise variables
    //=====================================================

    // IMPLEMENT MUTATIONS!
    Joint[] jointArray; // the array from which the creature will choose joints to generate from

    double jumpPower;
    if(generationOneCreature()){// the creature is a generatin 1 creautre
        jumpPower = Math.rand(0,10);// the creature will get a random jump power between 0 and 10. Of course this can change
    }else{// the creature is not a generation 1 creature
        jumpPwer = Math.rand(creature1.jumpPower, creature2.Jumppower)// the creature gets jump power using its parent's jump power
    
    double distance = 0.0;// initialise distance variable. This will increment when the creature travels


    //=====================================================
    // Constructrs
    //=====================================================

    public void Creature(){
        // construcotr for when the craeture does not have any parents(Generation 1 creature)
        jointArray = new Joint();//Populate the array with all possible joints. The joint class constructor  will create an array with random joints
        jumpPower = Math.rand(0,10);// the creature will get a random jump power between 0 and 10. 10 IS A PLACEHOLDER. this can change
    }

    public vod Creature(cr1,cr2){
        // constructor for when the creature has parents, cr1 and cr2
        jointArray = new Joint(cr1, cr2);// populat jointArray with joints used by the creature's parents
        jumpPower = Math.rand(Math.Min(cr1.jumpPower, cr2.jumpPower),Math.Max(cr1.jumpPower, cr2.jumpPower))// give the creature jump using the creature's parents jump power
    }


}